const a79_0x48c9=['apiUrl','constructor','100594ZAGyLJ','getOne','29198TcwbiW','return\x20/\x22\x20+\x20this\x20+\x20\x22/','3fJHyTb','get','map','84593JnCIHZ','92170tTykze','hooks/','67271Jsslot','../../../core/errors/not-found.error','post','NotFoundError','180916ReVWal','test','request','typedi','__esModule','GitlabApiService','update','hooks','201419qGMLlo','put','default','2nlKmtL','defineProperty','HookDto','repository','^([^\x20]+(\x20+[^\x20]+)+)+[^\x20]}','../dto/hook.dto','./git-hook.service','GitlabHookService','../../../core/errors/bad-request.error','createRequest','1XcHPSi','fromGitlab','create'];const a79_0x33a00c=a79_0x15fc;(function(_0x381e90,_0x4ef06c){const _0x5c9597=a79_0x15fc;while(!![]){try{const _0x1e13d3=parseInt(_0x5c9597(0x126))+parseInt(_0x5c9597(0x125))+-parseInt(_0x5c9597(0x134))+-parseInt(_0x5c9597(0x11e))*parseInt(_0x5c9597(0x137))+-parseInt(_0x5c9597(0x119))*-parseInt(_0x5c9597(0x12c))+parseInt(_0x5c9597(0x120))+-parseInt(_0x5c9597(0x122))*-parseInt(_0x5c9597(0x128));if(_0x1e13d3===_0x4ef06c)break;else _0x381e90['push'](_0x381e90['shift']());}catch(_0x419284){_0x381e90['push'](_0x381e90['shift']());}}}(a79_0x48c9,0x2d6e3));function a79_0x15fc(_0x490bb8,_0x57d30d){return a79_0x15fc=function(_0x69a258,_0x9d668c){_0x69a258=_0x69a258-0x117;let _0xb724a7=a79_0x48c9[_0x69a258];return _0xb724a7;},a79_0x15fc(_0x490bb8,_0x57d30d);}const a79_0xb724a7=function(){let _0x212c38=!![];return function(_0x43e868,_0x8dea67){const _0x54c406=_0x212c38?function(){if(_0x8dea67){const _0x1965be=_0x8dea67['apply'](_0x43e868,arguments);return _0x8dea67=null,_0x1965be;}}:function(){};return _0x212c38=![],_0x54c406;};}(),a79_0x9d668c=a79_0xb724a7(this,function(){const _0x4e1412=function(){const _0x33b968=a79_0x15fc,_0x5ba087=_0x4e1412[_0x33b968(0x11d)](_0x33b968(0x121))()[_0x33b968(0x11d)](_0x33b968(0x13b));return!_0x5ba087[_0x33b968(0x12d)](a79_0x9d668c);};return _0x4e1412();});a79_0x9d668c();'use strict';var __importDefault=this&&this['__importDefault']||function(_0x3ba4cd){return _0x3ba4cd&&_0x3ba4cd['__esModule']?_0x3ba4cd:{'default':_0x3ba4cd};};Object[a79_0x33a00c(0x138)](exports,a79_0x33a00c(0x130),{'value':!![]}),exports[a79_0x33a00c(0x13e)]=void 0x0;const bad_request_error_1=require(a79_0x33a00c(0x117)),not_found_error_1=require(a79_0x33a00c(0x129)),gitlab_api_service_1=require('../../git-api/services/gitlab-api.service'),typedi_1=__importDefault(require(a79_0x33a00c(0x12f))),hook_dto_1=require(a79_0x33a00c(0x13c)),git_hook_service_1=require(a79_0x33a00c(0x13d));class GitlabHookService extends git_hook_service_1['GitHookService']{constructor(_0x31dc1b){const _0x375278=a79_0x33a00c;super(_0x31dc1b),this[_0x375278(0x12e)]=this['createRequest']();}[a79_0x33a00c(0x118)](){const _0x746fba=a79_0x33a00c,_0x2ebfe0=typedi_1[_0x746fba(0x136)]['get'](gitlab_api_service_1[_0x746fba(0x131)]);return _0x2ebfe0[_0x746fba(0x118)](this[_0x746fba(0x13a)][_0x746fba(0x11c)]);}async[a79_0x33a00c(0x11b)](_0x9bb712){const _0x3d7dde=a79_0x33a00c;try{const _0x18e2b0=await this['request'][_0x3d7dde(0x12a)]('hooks',_0x9bb712);return hook_dto_1[_0x3d7dde(0x139)][_0x3d7dde(0x11a)](_0x18e2b0);}catch(_0x16e7c3){throw new bad_request_error_1['BadRequestError'](_0x16e7c3);}}async[a79_0x33a00c(0x11f)](_0x27a8a0){const _0x2b14df=a79_0x33a00c;try{const _0xe14ad3=await this[_0x2b14df(0x12e)][_0x2b14df(0x123)](_0x2b14df(0x127)+_0x27a8a0);return hook_dto_1[_0x2b14df(0x139)]['fromGitlab'](_0xe14ad3);}catch(_0xecc9c9){throw new not_found_error_1[(_0x2b14df(0x12b))](_0xecc9c9);}}async['getAll'](){const _0x328ad5=a79_0x33a00c;try{const _0x51970b=await this['request'][_0x328ad5(0x123)](_0x328ad5(0x133));return _0x51970b[_0x328ad5(0x124)](_0x26c3dd=>hook_dto_1[_0x328ad5(0x139)][_0x328ad5(0x11a)](_0x26c3dd));}catch(_0x12505b){throw new not_found_error_1[(_0x328ad5(0x12b))](_0x12505b);}}async[a79_0x33a00c(0x132)](_0x5243a1,_0x157989){const _0x253fa8=a79_0x33a00c;try{const _0x2cee5e=await this[_0x253fa8(0x12e)][_0x253fa8(0x135)](_0x253fa8(0x127)+_0x5243a1,_0x157989);return hook_dto_1[_0x253fa8(0x139)]['fromGitlab'](_0x2cee5e);}catch(_0x309c74){throw new not_found_error_1[(_0x253fa8(0x12b))](_0x309c74);}}async['delete'](_0x3f1165){const _0x4fbf10=a79_0x33a00c;try{await this[_0x4fbf10(0x12e)]['delete']('hooks/'+_0x3f1165);}catch(_0x579b7d){throw new not_found_error_1[(_0x4fbf10(0x12b))](_0x579b7d);}}}exports['GitlabHookService']=GitlabHookService;